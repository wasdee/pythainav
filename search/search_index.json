{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PythaiNAV \u00b6 \u0e17\u0e33\u0e43\u0e2b\u0e49\u0e01\u0e32\u0e23\u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 \u0e01\u0e2d\u0e07\u0e17\u0e38\u0e19\u0e44\u0e17\u0e22 \u0e40\u0e1b\u0e47\u0e19\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e07\u0e48\u0e32\u0e22 Get Started - \u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19 \u00b6 \u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07 PythaiNAV \u0e01\u0e48\u0e2d\u0e19 1 pip install pythainav 1 2 3 4 5 6 7 8 9 10 11 12 13 import pythainav as nav nav . get ( \"KT-PRECIOUS\" ) > Nav ( value = 4.2696 , updated = '20/01/2020' , tags = { 'latest' }, fund = 'KT-PRECIOUS' ) nav . get ( \"TISTECH-A\" , date = \"1 week ago\" ) > Nav ( value = 12.9976 , updated = '14/01/2020' , tags = {}, fund = 'TISTECH-A' ) nav . get_all ( \"TISTECH-A\" , range = \"MAX\" ) > [ Nav ( value = 12.9976 , updated = '21/01/2020' , tags = {}, fund = 'TISTECH-A' ), Nav ( value = 12.9002 , updated = '20/01/2020' , tags = {}, fund = 'TISTECH-A' ), ... ] nav . get_all ( \"KT-PRECIOUS\" , asDataFrame = True ) > pd . DataFrame [ 2121 rows x 4 columns ]","title":"Get Started"},{"location":"#pythainav","text":"\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e01\u0e32\u0e23\u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 \u0e01\u0e2d\u0e07\u0e17\u0e38\u0e19\u0e44\u0e17\u0e22 \u0e40\u0e1b\u0e47\u0e19\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e07\u0e48\u0e32\u0e22","title":"PythaiNAV"},{"location":"#get-started-","text":"\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07 PythaiNAV \u0e01\u0e48\u0e2d\u0e19 1 pip install pythainav 1 2 3 4 5 6 7 8 9 10 11 12 13 import pythainav as nav nav . get ( \"KT-PRECIOUS\" ) > Nav ( value = 4.2696 , updated = '20/01/2020' , tags = { 'latest' }, fund = 'KT-PRECIOUS' ) nav . get ( \"TISTECH-A\" , date = \"1 week ago\" ) > Nav ( value = 12.9976 , updated = '14/01/2020' , tags = {}, fund = 'TISTECH-A' ) nav . get_all ( \"TISTECH-A\" , range = \"MAX\" ) > [ Nav ( value = 12.9976 , updated = '21/01/2020' , tags = {}, fund = 'TISTECH-A' ), Nav ( value = 12.9002 , updated = '20/01/2020' , tags = {}, fund = 'TISTECH-A' ), ... ] nav . get_all ( \"KT-PRECIOUS\" , asDataFrame = True ) > pd . DataFrame [ 2121 rows x 4 columns ]","title":"Get Started - \u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19"},{"location":"api/","text":"API Reference - \u0e2d\u0e49\u0e32\u0e07\u0e2d\u0e34\u0e07 API \u00b6 pythainav. get ( fund_name , * , source='finnomena' , date=None , **kargs ) Gets the latest NAV Parameters: fund_name - Fund name found in finnomena such as TISTECH-A source - (optional) Data source for pull data. See Data Sources section in the documentation for all availiable options. date - (optional) get latest price of a given date subscription_key - (optional) Subscription key that required for a data source like sec (a.k.a) Returns: Nav Usage: 1 2 3 4 >>> import pythainav as nav >>> nav . get ( \"KT-PRECIOUS\" ) Nav ( value = 4.2696 , updated = '20/01/2020' , tags = { 'latest' }, fund = 'KT-PRECIOUS' ) pythainav. get_all ( fund_name , * , source='finnomena' , asDataFrame=False , range='1Y' , **kargs ) Gets the latest NAV Parameters: fund_name - Fund name found in finnomena such as TISTECH-A source - (optional) Data source for pull data. See Data Sources section in the documentation for all availiable options. range - (optional) time period defalut to 1 year, avaliable options are \"1D\", \"1W\", \"1M\", \"6M\", \"YTD\", \"1Y\", \"3Y\", \"5Y\", \"10Y\", \"MAX\" asDataFrame - (optional) return pandas dataframe instead. subscription_key - (optional) Subscription key that required for a data source like sec (a.k.a) Returns: List[Nav] or pd.DataFrame Usage: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 >>> import pythainav as nav >>> nav . get_all ( \"KT-PRECIOUS\" ) [ Nav ( value = 4.2696 , updated = '20/01/2020' , tags = { 'latest' }, fund = 'KT-PRECIOUS' ), ... ] >>> nav . get_all ( \"KT-PRECIOUS\" , asDataFrame = True ) value updated tags fund 0 10.0001 2010 - 11 - 19 {} KT - PRECIOUS 1 10.0566 2010 - 11 - 22 {} KT - PRECIOUS 2 10.0326 2010 - 11 - 23 {} KT - PRECIOUS 3 10.0428 2010 - 11 - 24 {} KT - PRECIOUS 4 10.0253 2010 - 11 - 25 {} KT - PRECIOUS ... ... ... ... ... 2260 5.5777 2020 - 10 - 07 {} KT - PRECIOUS 2261 5.6468 2020 - 10 - 08 {} KT - PRECIOUS 2262 5.8868 2020 - 10 - 09 {} KT - PRECIOUS 2263 5.9086 2020 - 10 - 14 {} KT - PRECIOUS 2264 5.8438 2020 - 10 - 15 {} KT - PRECIOUS [ 2265 rows x 4 columns ]","title":"API Reference"},{"location":"api/#api-reference-api","text":"pythainav. get ( fund_name , * , source='finnomena' , date=None , **kargs ) Gets the latest NAV Parameters: fund_name - Fund name found in finnomena such as TISTECH-A source - (optional) Data source for pull data. See Data Sources section in the documentation for all availiable options. date - (optional) get latest price of a given date subscription_key - (optional) Subscription key that required for a data source like sec (a.k.a) Returns: Nav Usage: 1 2 3 4 >>> import pythainav as nav >>> nav . get ( \"KT-PRECIOUS\" ) Nav ( value = 4.2696 , updated = '20/01/2020' , tags = { 'latest' }, fund = 'KT-PRECIOUS' ) pythainav. get_all ( fund_name , * , source='finnomena' , asDataFrame=False , range='1Y' , **kargs ) Gets the latest NAV Parameters: fund_name - Fund name found in finnomena such as TISTECH-A source - (optional) Data source for pull data. See Data Sources section in the documentation for all availiable options. range - (optional) time period defalut to 1 year, avaliable options are \"1D\", \"1W\", \"1M\", \"6M\", \"YTD\", \"1Y\", \"3Y\", \"5Y\", \"10Y\", \"MAX\" asDataFrame - (optional) return pandas dataframe instead. subscription_key - (optional) Subscription key that required for a data source like sec (a.k.a) Returns: List[Nav] or pd.DataFrame Usage: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 >>> import pythainav as nav >>> nav . get_all ( \"KT-PRECIOUS\" ) [ Nav ( value = 4.2696 , updated = '20/01/2020' , tags = { 'latest' }, fund = 'KT-PRECIOUS' ), ... ] >>> nav . get_all ( \"KT-PRECIOUS\" , asDataFrame = True ) value updated tags fund 0 10.0001 2010 - 11 - 19 {} KT - PRECIOUS 1 10.0566 2010 - 11 - 22 {} KT - PRECIOUS 2 10.0326 2010 - 11 - 23 {} KT - PRECIOUS 3 10.0428 2010 - 11 - 24 {} KT - PRECIOUS 4 10.0253 2010 - 11 - 25 {} KT - PRECIOUS ... ... ... ... ... 2260 5.5777 2020 - 10 - 07 {} KT - PRECIOUS 2261 5.6468 2020 - 10 - 08 {} KT - PRECIOUS 2262 5.8868 2020 - 10 - 09 {} KT - PRECIOUS 2263 5.9086 2020 - 10 - 14 {} KT - PRECIOUS 2264 5.8438 2020 - 10 - 15 {} KT - PRECIOUS [ 2265 rows x 4 columns ]","title":"API Reference - \u0e2d\u0e49\u0e32\u0e07\u0e2d\u0e34\u0e07 API"},{"location":"datasource/","text":"Data Sources - \u0e41\u0e2b\u0e25\u0e48\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 \u00b6 PythaiNAV \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e44\u0e14\u0e49\u0e08\u0e32\u0e01\u0e41\u0e2b\u0e25\u0e48\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 3 \u0e41\u0e2b\u0e25\u0e48\u0e07 \u0e41\u0e2b\u0e25\u0e48\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 parameter name require key \u0e2d\u0e49\u0e32\u0e07\u0e2d\u0e34\u0e07 API \u0e2b\u0e21\u0e32\u0e22\u0e40\u0e2b\u0e15\u0e38 https://www.finnomena.com/fund \"finnomena\" - Postman https://api-portal.sec.or.th/ \"sec\" subscription_key Postman \u0e01\u0e33\u0e25\u0e31\u0e07\u0e1e\u0e31\u0e12\u0e19\u0e32 http://dataexchange.onde.go.th/ \"onde\" subscription_key ** Postman \u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2a\u0e21\u0e31\u0e04\u0e23\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e02\u0e2d\u0e23\u0e31\u0e1a subscription_key \u0e44\u0e14\u0e49 ref","title":"Data Source"},{"location":"datasource/#data-sources-","text":"PythaiNAV \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e44\u0e14\u0e49\u0e08\u0e32\u0e01\u0e41\u0e2b\u0e25\u0e48\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 3 \u0e41\u0e2b\u0e25\u0e48\u0e07 \u0e41\u0e2b\u0e25\u0e48\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 parameter name require key \u0e2d\u0e49\u0e32\u0e07\u0e2d\u0e34\u0e07 API \u0e2b\u0e21\u0e32\u0e22\u0e40\u0e2b\u0e15\u0e38 https://www.finnomena.com/fund \"finnomena\" - Postman https://api-portal.sec.or.th/ \"sec\" subscription_key Postman \u0e01\u0e33\u0e25\u0e31\u0e07\u0e1e\u0e31\u0e12\u0e19\u0e32 http://dataexchange.onde.go.th/ \"onde\" subscription_key ** Postman \u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2a\u0e21\u0e31\u0e04\u0e23\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e02\u0e2d\u0e23\u0e31\u0e1a subscription_key \u0e44\u0e14\u0e49 ref","title":"Data Sources - \u0e41\u0e2b\u0e25\u0e48\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25"}]}